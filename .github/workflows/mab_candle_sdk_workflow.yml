# MAB Robotics CANDLE SDK GitHub Actions workflow file
name: CANDLE_SDK_CI

on:
  pull_request:
    types: [assigned, opened, synchronize, reopened]
    branches: "**"

jobs:
  build-candleSDK-linux:
    runs-on: ubuntu-22.04
    container:
      image: mabroboticsofficial/mab_build_environment

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with: 
        submodules: 'true'

    - name: CMake configure
      run: |
        cmake -DCMAKE_BUILD_TYPE=Release -B build -G "Unix Makefiles" .

    - name: Build
      run: cmake --build ./build

    - name: Create .deb package
      run: make -C ./build package

    - name: Store artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Candletool-build-artifacts-x86_64
        path: |
          build/*.deb

  build-candleSDK-linux-arm64:
    runs-on: ubuntu-22.04
    container:
      image: mabroboticsofficial/mab_build_environment

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with: 
        submodules: 'true'

    - name: CMake configure
      run: |
        cmake -DCMAKE_BUILD_TYPE=Release --toolchain ./cmake/linux.arm64.toolchain.cmake ./ -B build -G "Unix Makefiles" .

    - name: Build
      run: cmake --build ./build

    - name: Create .deb package
      run: make -C ./build package

    - name: Store artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Candletool-build-artifacts-arm64
        path: |
          build/*.deb
        
  test-candleSDK-linux:
    runs-on: ubuntu-22.04
    container:
      image: mabroboticsofficial/mab_build_environment,    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: 
          submodules: 'true'
  
      - name: CMake configure
        run: |
          cmake -DCMAKE_BUILD_TYPE=Release -B build -G "Unix Makefiles" .
  
      - name: Build
        run: cmake --build ./build
      
      - name: Test
        run: ./launch/run_all_tests.sh
    
  
  # release-candleSDK-linux:
  #   runs-on: ubuntu-22.04
  #   needs: build-candleSDK-linux

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Download .deb files artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: Candletool-build-artifacts
  #         path: ./release

  #     - name: Create GitHub Release
  #       id: create_release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag_name: superTag123
  #         release_name: Release superTag123
  #         draft: false
  #         prerelease: false

  #     - name: Upload .deb files to Release
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./release/*.deb
  #         asset_name: my-deb-file.deb
  #         asset_content_type: application/octet-stream